{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Contract","window","web3","eth","contract","constant","inputs","name","type","outputs","payable","stateMutability","state","ContractInstance","at","details","owner","URN","Desc","Type","Value","query","bind","assertThisInitialized","counter","handleDetailsRequest","handleOwnershipRequest","handleInputChange","handlePropReg","district","err","result","console","error","log","alert","showCount","event","preventDefault","showProperty","whoOwns","target","value","setState","defineProperty","Build","arg1","arg2","arg3","arg4","react_default","a","createElement","Fragment","className","src","logo","alt","onSubmit","placeholder","onChange","id","onClick","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2787fcfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props){\n    super (props);\n\n    const Contract = window.web3.eth.contract(\n      [\n        {\n          \"constant\": false,\n          \"inputs\": [\n            {\n              \"name\": \"RegNum\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"description\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"Ptype\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"name\": \"newValue\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"Build\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"uint16\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"kill\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"name\": \"d\",\n              \"type\": \"string\"\n            }\n          ],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"constructor\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"district\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"string\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"inventory\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"name\": \"properties\",\n          \"outputs\": [\n            {\n              \"name\": \"URN\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"name\": \"propertyDescription\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"propType\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"name\": \"status\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"name\": \"currentValue\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"name\": \"owner\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"registrar\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"showCount\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"uint16\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"name\": \"RegNum\",\n              \"type\": \"string\"\n            }\n          ],\n          \"name\": \"showProperty\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        },\n        {\n          \"constant\": true,\n          \"inputs\": [\n            {\n              \"name\": \"RegNum\",\n              \"type\": \"string\"\n            }\n          ],\n          \"name\": \"whoOwns\",\n          \"outputs\": [\n            {\n              \"name\": \"\",\n              \"type\": \"string\"\n            }\n          ],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }\n      ]\n    );\n\n    this.state = {\n      ContractInstance: Contract.at('0x0dae2986ff7c5b60aad80e5ecac4a91ed406914f'),\n      details: '', owner: '',\n      URN: '', Desc: '', Type: '', Value: ''\n    }\n\n    this.query = this.query.bind(this);\n    this.counter = this.counter.bind(this);\n    this.handleDetailsRequest = this.handleDetailsRequest.bind(this);\n    this.handleOwnershipRequest = this.handleOwnershipRequest.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePropReg = this.handlePropReg.bind(this);\n  }\n\n  query () {\n    const { district } = this.state.ContractInstance;\n\n    district ((err, result) => {\n      if (err) console.error('Error', err);\n      console.log ('District is:::', result);\n      alert(\"District of \"+result);\n    })\n  }\n\n  counter() {\n    const { showCount } = this.state.ContractInstance;\n\n    showCount ((err, result) => {\n      if (err) console.error('Error', err);\n      console.log ('Total is:::', result);\n      alert(\"Total entries: \"+result)\n    })\n  }\n\n  handleDetailsRequest(event) {\n\n    event.preventDefault();\n\n    const {showProperty} = this.state.ContractInstance;\n    const {details: arg} = this.state;\n    showProperty (arg,\n        (err,result) => {console.log(':::', result);\n        alert(\"Details: \"+result[0]+\"    Value: \"+result[1])\n    })\n\n  }\n\n  handleOwnershipRequest(event) {\n\n    event.preventDefault();\n\n    const {whoOwns} = this.state.ContractInstance;\n    const {owner: arg} = this.state;\n    whoOwns (arg,\n        (err,result) => {console.log(':::', result);\n        alert(\"Owner is \"+result)\n    })\n\n  }\n\n  handleInputChange(event){\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({[name]: value});\n  }\n\n  handlePropReg(event){\n\n    event.preventDefault();\n\n    const {Build} = this.state.ContractInstance;\n    const {URN: arg1} = this.state;\n    const {Desc: arg2} = this.state;\n    const {Type: arg3} = this.state;\n    const {Value: arg4} = this.state;\n\n    Build (arg1, arg2, arg3, arg4,\n      (err, result) => {\n        if (err) console.error('Error', err);\n        console.log(':::', result);\n        alert( \"Entered property \"+arg1)\n      })\n  }\n\n\n\n  render (){\n    return (<>\n\n      <div className=\"Reg\">\n        <header className =\"Register\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n\n      <div>\n        <h2>Property Registration Form</h2>\n\n        <form onSubmit = { this.handlePropReg } >\n          <label>\n          Property Registration Number: \n          <input \n            type=\"text\" \n            name=\"URN\" \n            placeholder = \"Enter URN\" \n            value={this.state.URN}\n            onChange={this.handleInputChange}/>\n          </label>\n          <br/><br/>\n          \n          <label>\n          Property Description:\n            <input name=\"Desc\" value={this.state.Desc}\n            onChange={this.handleInputChange}></input>\n          </label>\n          <br/><br/>\n          \n          <label>\n          Property Type:\n            <select id = \"\" name=\"Type\" value={this.state.Type}\n            onChange={this.handleInputChange}>\n              <option value = \"0\">Residential Property</option>\n              <option value = \"1\">Office Space</option>\n              <option value = \"2\">Commercial Premises</option>\n              <option value = \"3\">Industrial Premises</option>\n              <option value = \"4\">Agricultural Land</option>\n              <option value = \"5\">Public Space</option>\n            </select>\n            </label>\n            <br/><br/>\n\n           <label>\n           Current Value:\n            <input type=\"text\" name=\"Value\" value={this.state.Value}\n            onChange={this.handleInputChange}></input>\n            </label>\n            <br/><br/>\n\n            <button type=\"submit\"> Submit </button>\n          </form> \n          <br/><br/>\n        </div>\n\n        <div>\n          <h2 className=\"App-title\"> Query Register </h2>\n\n            <button onClick= {this.query}> District? </button>\n            <br /><br />\n\n            <button onClick= {this.counter }> Number of Entries? </button>\n            <br /><br />\n\n            <form onSubmit={ this.handleDetailsRequest }>\n              <label>\n                Property Details for: \n              <input\n                type = \"text\"\n                placeholder = \"Enter URN\"\n                name=\"details\"\n                value = {this.state.details}\n                onChange={this.handleInputChange}/>\n                </label>\n                <button type=\"submit\"> Submit </button>\n            </form>\n            <br />\n\n            <form onSubmit={ this.handleOwnershipRequest }>\n              <label>\n                Who owns: \n              <input\n                type = \"text\"\n                name=\"owner\"\n                placeholder = \"Enter URN\"\n                value = {this.state.owner}\n                onChange={this.handleInputChange}/>\n                </label>\n                <button type=\"submit\"> Submit </button>\n            </form>\n            <br /><br />\n          </div>\n\n       </>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}